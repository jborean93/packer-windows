# this creates the changelog in the description for the Vagrant box
pri_packer_setup_changelog:
- version: '0.8.0'
  date: TBD
  changes:
  - Removed the Server 2008 and 2008 R2 builds as they are end of life.
  - Added Server 2022 based on the latest preview ISO on the evaluation centre.
  - Added `pwsh` to the image and configured SSH remoting for pwsh.
  - Updated OpenSSH version to [v8.6.0.0p1-Beta](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/V8.6.0.0p1-Beta).
  - Updated VirtIO driver version to `0.1.185`.
  - Raised minimum Ansible version to `2.9.0`.
  - Raised minimum Packer version to `1.6.0` and removed deprecated options.
  host_specific_changes:
    2012:
    - TODO Recreate RDP certificate to use SHA256 as SHA1 is being deprecated.
    2022:
    - New build
    - TODO Enabled TLS 1.3 in SChannel for both the client and the server.
- version: '0.7.0'
  date: 2019-12-20
  changes:
  - Added `qemu/libvirt` boxes and default template to use VirtIO drivers for better performance
  - Pin the VirtIO driver version to a specific version that can be manually updated across version. Currently at the latest stable version of `0.1.171`.
  - Updated OpenSSH version to [v8.0.0.0p1-Beta](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v8.0.0.0p1-Beta)
  - Raised minimum Ansible version to `2.7.0`.
  - Swapped the connection plugin from `winrm` to `psrp` for faster builds. The [pypsrp](https://pypi.org/project/pypsrp/) Python library needs to be installed.
  host_specific_changes:
    2008-x86:
    - Enabled TLSv1.2 on the SChannel server now the patch is not faulty.
    2008-x64:
    - Enabled TLSv1.2 on the SChannel server now the patch is not faulty.
- version: '0.6.0'
  date: 2019-01-20
  changes:
  - Fix logic when setting the `LocalAccountTokenFilterPolicy` value when setting up the WinRM listener
  - Added ability to override the base Chocolatey packages that are installed with the image, use the `opt_package_setup_packages` variable with `-e` when generating the template to configure
  - Moved away from custom role to install the Win32-OpenSSH components, now using the [jborean93.win_openssh](https://galaxy.ansible.com/jborean93/win_openssh) role
  - Updated OpenSSH version [7.9.0.0p1-Beta](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.9.0.0p1-Beta)
  - Installed the [virtio-network](https://stg.fedoraproject.org/wiki/Windows_Virtio_Drivers) driver on VirtualBox images
  host_specific_changes:
    2016:
    - Changed the default Windows Explorer window to show `This PC` instead of `Quick access`
- version: '0.5.0'
  date: 2018-08-08
  changes:
  - Disabled automatic Windows Update to eliminate post-startup thrash on older images - https://github.com/jborean93/packer-windoze/issues/10
  - Updated Win32-OpenSSH to the latest release [v7.7.2.0p1-Beta](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.2.0p1-Beta)
  - Ensure WinRM HTTPS listener and firewall is configured before allowing Vagrant to detect the host is up - https://github.com/jborean93/packer-windoze/issues/11
  - Run ngen before sysprep process to try and speed up the Vagrant init time
  - Clean up `C:\Windows\SoftwareDistribution\Download` and `C:\Recovery` as part of the cleanup process
- version: '0.4.0'
  date: 2018-05-16
  changes:
  - Create a PS Module called `PackerWindoze` that stores the `Reset-WinRMConfig` cmdlet that recreates the WinRM configuration and keep that post sysprep for downstream users to call at any time
  - Added support for the Server 1803 image
  - Install the full sysinternals suite instead of just PsTools, ProcMon, and ProcExp
  - Fixed issue where the WinRM HTTPS firewall rule was not created after sysprep
  - Fixed issue where WinRM still allowed unencrypted data after sysprep
- version: '0.3.0'
  date: 2018-05-10
  changes:
  - Updated OpenSSH version to [v7.6.1.0p1-Beta](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.6.1.0p1-Beta)
  - Set the builtin `vagrant` account password to never expire
  - Stop using the Ansible ConfigureRemotingForAnsible.ps1 script, swap over to custom script to support SHA256 and simplify steps
  - Added Hyper-V builder support by specifying `-e opt_packer_setup_builder=hyperv` - This will only run on a Windows with WSL host and doesn't work for Server 2008
  host_specific_changes:
    2008-x64:
    - Enabled TLSv1.2 client support, server is still disabled by default
    2008-x86:
    - Enabled TLSv1.2 client support, server is still disabled by default
- version: '0.2.0'
  date: 2017-12-01
  changes:
  - Create a custom Vagrantfile template for the final image that includes the username and other required settings
  - Moved sysprep process before the image is created
  - Added `slmgr.vbs /rearm` to run just after Vagrant starts the image to get the full evaluation period possible
  - Removed SSL certificates that were created during the packer build process
  - Installed [Win32-OpenSSH](https://github.com/PowerShell/Win32-OpenSSH) v0.0.23.0 on all images eacept Server 2008
  - Added .travis-ci file to run [ansible-lint](https://github.com/willthames/ansible-lint) on the Ansible files for some testing sanity
  - Decided to install the VirtualBox guest additions tools as part fo the build process
  - Added vim to the list of chocolatey packages to help with Core OS installs or connecting via SSH
  host_specific_changes:
    1709:
    - Added support for Windows Server 1709
    - This won't be available in Vagrant Cloud as it is not avaible as a public evaluation ISO
    2016:
    - Will not remove Features on Demand until [this](https://social.msdn.microsoft.com/Forums/en-US/2ad1c1d9-09ba-407e-ba03-951c6f2baa34/features-on-demand-server-2016-source-not-found?forum=ws2016) is resolved
    2008r2:
    - Enabled TLSv1.2 cipher support for both the client and server components
    2008-x64:
    - Disabled screensaver to stop auto logoff by default
    - Ensure TLSv1.2 cipher support KB is installed but not enabled due to bug in the server implementation
    2008-x86:
    - Disabled screensaver to stop auto logoff by default
    - Ensure TLSv1.2 cipher support KB is installed but not enabled due to bug in the server implementation
- version: '0.0.1'
  date: 2017-10-29
  changes:
  - First images built by this process

pri_packer_setup_builders_info:
  common:
    iso_url: '{{ pri_packer_setup_config.iso_url }}'
    iso_checksum: '{{ pri_packer_setup_config.iso_checksum }}'
    communicator: winrm
    disk_size: '{{ opt_packer_setup_disk_size_mib | default(40960) }}'
    winrm_username: '{{ opt_packer_setup_username }}'
    winrm_password: '{{ opt_packer_setup_password }}'
    winrm_port: '5985'
    winrm_timeout: '240m'
    shutdown_command: schtasks.exe /Run /TN "packer-shutdown"
    shutdown_timeout: 15m
  virtualbox:
    type: virtualbox-iso
    guest_additions_mode: 'attach'
    vboxmanage:
    -
      - modifyvm
      # need to double escape the Jinja2 {{.Name}} value so Ansible doesn't see it as a variable
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --memory
      - "2048"
    -
      - modifyvm
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --vram
      - "48"
    -
      - modifyvm
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --cpus
      - "2"
    -
      - modifyvm
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --natpf1
      - winrm,tcp,127.0.0.1,{{ pri_packer_setup_config.vb_forwarded_port }},,5985
    -
      - storagectl
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --name
      - Sata Controller
      - --add
      - sata
      - --controller
      - IntelAHCI
    -
      - storageattach
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --storagectl
      - Sata Controller
      - --port
      - "1"
      - --device
      - "0"
      - --type
      - dvddrive
      - --medium
      - '{{ man_packer_setup_host_type }}/secondary.iso'
    -
      - storageattach
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --storagectl
      - Sata Controller
      - --port
      - "2"
      - --device
      - "0"
      - --type
      - dvddrive
      - --medium
      - '{{ man_packer_setup_host_type }}/virtio.iso'
    vboxmanage_post:
    -
      - storagectl
      - "{% raw %}{{ '{{' }}.Name{{ '}}' }}{% endraw %}"
      - --name
      - Sata Controller
      - --remove
    guest_os_type: '{{ pri_packer_setup_config.vb_guest_os_type }}'
    headless: '{{ opt_packer_setup_headless }}'
  hyperv:
    type: hyperv-iso
    boot_command:
    - a<enter><wait>a<enter><wait>a<enter><wait>a<enter>
    boot_wait: 2s
    cpus: 2
    generation: 2
    memory: 2048
    secondary_iso_images:
    - '{{ man_packer_setup_host_type }}/secondary.iso'
    switch_name: '{{ opt_packer_setup_hyperv_switch|default("packer-windoze") }}'
    headless: '{{ opt_packer_setup_headless }}'
  qemu:
    type: qemu
    cpus: 2
    disk_interface: virtio
    disk_compression: true
    headless: '{{ opt_packer_setup_headless }}'
    memory: 2048
    net_device: virtio-net
    host_port_min: 5985
    host_port_max: 5985
    qemuargs:
    -
      - -netdev
      - user,id=user.0,hostfwd=tcp::5985-:5985
    -
      - -drive
      - file={{ man_packer_setup_host_type }}/secondary.iso,index=0,media=cdrom
    -
      - -drive
      - file={{ man_packer_setup_host_type }}/virtio.iso,index=1,media=cdrom
    # This entry probably needs to be removed in a future release, I think it's a bug where the drive is removed if
    # qemuargs is used and is fixed in an unreleased version right now.
    -
      - -drive
      - file=output-qemu/packer-qemu,if=virtio,cache=writeback,discard=ignore,format=qcow2

pri_packer_setup_provisioners_info:
  common: []
  virtualbox:
  - type: shell-local
    command: ansible-playbook main.yml -i {{ man_packer_setup_host_type }}/hosts.ini -vv
  hyperv:
  # get the IP address of the host and store it as a file
  - type: powershell
    inline:
    - (Get-CimInstance -ClassName Win32_NetworkAdapterConfiguration -Filter "IPEnabled=True")[0].IPAddress[0] | Set-Content -Path C:\Windows\TEMP\ip.txt
  # get the file that contains the IP address locally
  - type: file
    source: C:\Windows\TEMP\ip.txt
    destination: '{{ man_packer_setup_host_type }}/hyper-v-ip.txt'
    direction: download
  # replace the IP in the Ansible inventory with the real IP
  - type: shell-local
    script: '{{ man_packer_setup_host_type }}\configure-hyperv-network.ps1'
    execute_command:
    - powershell.exe
    - -ExecutionPolicy
    - ByPass
    - -File
    - '{% raw %}{{ "{{" }}.Script{{ "}}" }}{% endraw %}'
  - type: shell-local
    # Packer creates a tmp script for command which won't work for bash.exe -ic, we set the actual command we want to
    # use in execute_command and have a dummy value here
    command: dummy
    execute_command:
    - bash.exe
    - -ic
    - ansible-playbook main.yml -i {{ man_packer_setup_host_type }}/hosts.ini -vv
  qemu:
  - type: shell-local
    command: ansible-playbook main.yml -i {{ man_packer_setup_host_type }}/hosts.ini -vv

pri_packer_setup_post_processors_info:
  common:
    type: vagrant
    output: "{{ man_packer_setup_host_type }}/{{ opt_packer_setup_builder }}.box"
    vagrantfile_template: "{{ man_packer_setup_host_type }}/vagrantfile.template"
  virtualbox: {}
  hyperv: {}
  qemu: {}

pri_packer_setup_json:
  builders:
  - '{{ pri_packer_setup_builders }}'
  provisioners: '{{ pri_packer_setup_provisioners }}'
  post-processors:
  - '{{ pri_packer_setup_post_processors }}'

# host settings like url's, checksums, vbox types, etc
#   iso_url: The URL of the evaluation ISO
#   iso_checksum: The md5 checksum of the evaluation ISO

#   VirtualBox specifics for the host
#   vb_guest_os_type: The VirtualBox guest os type used when builing the VM, run 'VBoxManage list ostypes' to get a valid list
#   vb_forwarded_port: The port to set on 127.0.0.1 that will forward to port 5986 on the Windows host, this should be unique

#   Host Information generic to the Ansible setup
#   iso_wim_label: The WIM Name on the install ISO of the edition to install
#   architecture: The architecture of the build (x86 or amd64) for the answer file
#   product_key: The KMS product key required in setup, only used in Server 2008 answer file
#   box_tag: This is the box tag that I use, this can be overriden with opt_packer_setup_box_tag
#   driver_host_string: The host string name used for the Virtio drivers
#   bootstrap_files: A list of dictionaries that contains files to download for use in the bootstrapping process, this also modifies the bootstrapping script
pri_packer_setup_host_config:
  # host pattern <osname-[architecture]-[option]> where architecture and option
  # are optional and will default to x64 and minimal by default
  '2012':
    box_tag: jborean93/WindowsServer2012

    iso_url: http://download.microsoft.com/download/6/D/A/6DAB58BA-F939-451D-9101-7DE07DC09C03/9200.16384.WIN8_RTM.120725-1247_X64FRE_SERVER_EVAL_EN-US-HRM_SSS_X64FREE_EN-US_DV5.ISO
    iso_checksum: 19c627b6a24554bce45a3b03fc913a0d791d117088c7e953b9c07e866fd88b67
    vb_guest_os_type: Windows2012_64
    vb_forwarded_port: 55981

    iso_wim_label: Windows Server 2012 SERVERSTANDARD
    architecture: amd64
    driver_host_string: 2k12
    bootstrap_files:
    - name: WMFv3 Memory Hotfix
      action: install-zip
      zip_file_pattern: '*KB2842230*.msu'
      file: KB2842230-wmfv3.zip
      url: https://s3.amazonaws.com/ansible-ci-files/hotfixes/KB2842230/463941_intl_x64_zip.exe
    - type: update
      name: Servicing Stack Update for Windows Server 2012
      product: Windows Server 2012
    - type: update
      name: Security Monthly Quality Rollup for Windows Server 2012
      product: Windows Server 2012
  '2012r2':
    box_tag: jborean93/WindowsServer2012R2

    iso_url: http://download.microsoft.com/download/6/2/A/62A76ABB-9990-4EFC-A4FE-C7D698DAEB96/9600.17050.WINBLUE_REFRESH.140317-1640_X64FRE_SERVER_EVAL_EN-US-IR3_SSS_X64FREE_EN-US_DV9.ISO
    iso_checksum: 6612b5b1f53e845aacdf96e974bb119a3d9b4dcb5b82e65804ab7e534dc7b4d5
    vb_guest_os_type: Windows2012_64
    vb_forwarded_port: 55982

    iso_wim_label: Windows Server 2012 R2 SERVERSTANDARD
    architecture: amd64
    driver_host_string: 2k12R2
    bootstrap_files:
    - type: update
      name: Servicing Stack Update for Windows Server 2012 R2
      product: Windows Server 2012 R2
    - type: update
      name: Security Monthly Quality Rollup for Windows Server 2012 R2
      product: Windows Server 2012 R2
  '2016':
    box_tag: jborean93/WindowsServer2016

    iso_url: https://software-download.microsoft.com/download/pr/Windows_Server_2016_Datacenter_EVAL_en-us_14393_refresh.ISO
    iso_checksum: 1ce702a578a3cb1ac3d14873980838590f06d5b7101c5daaccbac9d73f1fb50f
    vb_guest_os_type: Windows2016_64
    vb_forwarded_port: 55983

    iso_wim_label: Windows Server 2016 SERVERSTANDARD
    architecture: amd64
    skip_feature_removal: yes
    driver_host_string: 2k16
    bootstrap_files:
    - type: update
      name: Servicing Stack Update for Windows Server 2016
      product: Windows Server 2016
    - type: update
      name: Cumulative Update for Windows Server 2016
      product: Windows Server 2016
  '2019':
    box_tag: jborean93/WindowsServer2019

    iso_url: https://software-download.microsoft.com/download/pr/17763.737.190906-2324.rs5_release_svc_refresh_SERVER_EVAL_x64FRE_en-us_1.iso
    iso_checksum: 549bca46c055157291be6c22a3aaaed8330e78ef4382c99ee82c896426a1cee1
    vb_guest_os_type: Windows2019_64
    vb_forwarded_port: 55984

    iso_wim_label: Windows Server 2019 SERVERSTANDARD
    architecture: amd64
    skip_feature_removal: yes
    driver_host_string: 2k19
    bootstrap_files:
    - type: update
      name: Servicing Stack Update for Windows Server 2019
      product: Windows Server 2019
    - type: update
      name: Cumulative Update for Windows Server 2019
      product: Windows Server 2019
  '2022':
    box_tag: jborean93/WindowsServer2019

    iso_url: https://software-download.microsoft.com/download/sg/20348.1.210507-1500.fe_release_SERVER_EVAL_x64FRE_en-us.iso
    iso_checksum: 2ee3a0325f7230b1ff68bd8db2695f4102eae4ff32118382b1ab2e2b98a71aaa
    vb_guest_os_type: Windows2019_64
    vb_forwarded_port: 55984

    iso_wim_label: Windows Server 2022 SERVERSTANDARD
    architecture: amd64
    skip_feature_removal: yes
    driver_host_string: 2k19  # FUTURE: Change this once virtio is updated
    bootstrap_files: []  # FUTURE: Set this once there are updates available
